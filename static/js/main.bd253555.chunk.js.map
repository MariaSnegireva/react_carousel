{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","imageIndex","setImageIndex","maxIndex","length","carouselListStyle","gap","transform","transition","className","type","cn","onClick","undefined","newIndex","style","width","map","image","index","src","alt","String","App","state","handleItemWidthChange","event","setState","target","value","handleFrameSizeChange","handleStepChange","handleAnimationChange","this","htmlFor","name","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd253555.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst MIN_INDEX = 0;\nconst IMAGE_GAP = 10;\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [imageIndex, setImageIndex] = useState(MIN_INDEX);\n\n  const maxIndex = images.length - frameSize;\n\n  const carouselListStyle = {\n    gap: `${IMAGE_GAP}px`,\n    transform: `translateX(${-imageIndex * (itemWidth + IMAGE_GAP)}px)`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  const handleRightButton = () => {\n    const newIndex = imageIndex + step;\n\n    if (newIndex > maxIndex) {\n      setImageIndex(maxIndex);\n    } else {\n      setImageIndex(newIndex);\n    }\n  };\n\n  const handleLeftButton = () => {\n    const newIndex = imageIndex - step;\n\n    if (newIndex < MIN_INDEX) {\n      setImageIndex(MIN_INDEX);\n    } else {\n      setImageIndex(newIndex);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        type=\"button\"\n        className={cn('Carousel__button Carousel__button--left', {\n          'Carousel__button--inactive': imageIndex === MIN_INDEX,\n        })}\n        onClick={imageIndex === MIN_INDEX ? undefined : handleLeftButton}\n        aria-label=\"previous images\"\n      />\n\n      <div\n        className=\"Carousel__container\"\n        style={{ width: `${itemWidth * frameSize + (frameSize - 1) * IMAGE_GAP}px` }}\n      >\n\n        <ul\n          className=\"Carousel__list\"\n          style={carouselListStyle}\n        >\n          {images.map((image, index) => (\n            <li key={image} className=\"Carousel__item\">\n              <img\n                src={image}\n                alt={String(index + 1)}\n                width={itemWidth}\n                className=\"Carousel__image\"\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        className={cn('Carousel__button Carousel__button--right', {\n          'Carousel__button--inactive': imageIndex === maxIndex,\n        })}\n        onClick={imageIndex === maxIndex ? undefined : handleRightButton}\n        aria-label=\"next images\"\n      />\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleItemWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  handleFrameSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  handleAnimationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'className='App__title'>\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <label htmlFor=\"itemId\" className=\"App__field\">\n          Item Width:\n          <input\n            type=\"number\"\n            name=\"item-width\"\n            id=\"itemId\"\n            className=\"App__input\"\n            value={itemWidth}\n            min={20}\n            max={500}\n            step={5}\n            onChange={this.handleItemWidthChange}\n          />\n          px\n        </label>\n\n        <label htmlFor=\"frameId\" className=\"App__field\">\n          Frame Size:\n          <input\n            type=\"number\"\n            name=\"frame-size\"\n            id=\"frameId\"\n            className=\"App__input\"\n            value={frameSize}\n            min={1}\n            max={images.length - 1}\n            onChange={this.handleFrameSizeChange}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\" className=\"App__field\">\n          Step:\n          <input\n            type=\"number\"\n            name=\"step\"\n            id=\"stepId\"\n            className=\"App__input\"\n            value={step}\n            min={1}\n            max={images.length - 1}\n            onChange={this.handleStepChange}\n          />\n        </label>\n\n        <label htmlFor=\"animationId\" className=\"App__field\">\n          Animation Duration:\n          <input\n            type=\"number\"\n            name=\"animation-duration\"\n            id=\"animationId\"\n            className=\"App__input\"\n            value={animationDuration}\n            min={0}\n            max={10000}\n            step={100}\n            onChange={this.handleAnimationChange}\n          />\n          ms\n        </label>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}